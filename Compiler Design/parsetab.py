
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COMMA CON C_END DIVIDE DOT ELSE EQ FLOAT FOR F_END GT GTE ID INT LBRACK LOOP LPAREN LT LTE L_END MINUS MODULE M_END NEQ NUM OR PLUS PRINT PYC RBRACK READ RPAREN SKP STR TIMES USE VAR VASS V_END\n\tS : VA SKP M\n\t\n\tVA \t: VAR SKP VX V_END\n\tVX\t: VX VY\n\t\t| VY\n\tVY\t: VFD\n\t\t| VFU\n\t\t| VID\n\t\t| VIU\n\t\t| EMPTY\n\tVFD : FLOAT VAX VASS NUM DOT NUM SKPVFU : FLOAT VAX SKPVID : INT VAX VASS NUM SKPVIU : INT VAX SKPVAX : VAX COMMA VAAVAX : VAAVAA : IDVAA : ID DIMDIM : DIM DIMYDIM : DIMYDIMY : LBRACK NID RBRACK\n\tM\t: MX SKP M\n\t\t| EMPTY\n\tMX\t: MODULE MID SKP A MYMID : IDMY : M_END\n\tA\t: A AX SKP\n\t\t| EMPTY\n\t\n\tAX\t: RD\n\t \t| PR\n\t\t| CD\n\t\t| LP\n\t\t| FR\n\t\t| AR\n\t\t| US\n\t\t| EMPTY\n\tPR\t: PRINT LPAREN PX RPARENPX\t: PX PLUS PXPX\t: STRPX\t: VAARD\t: READ LPAREN VAA RPARENUS\t: USE ID\n\tCD\t: CON EL CDX SKP A CDE CDZ\n\tCDE : CDY SKP A\n\t\t| EMPTY\n\tCDX : PYCCDY : ELSECDZ : C_ENDLP\t: LOOP EL LPX SKP A LPYLPX : PYCLPY : L_ENDFR\t: FOR FRX SKP A FRYFRX : ID VASS NID SL NID COMMA NID PYCFRY : F_ENDAR\t: VAA VASS EAEA\t: EA PLUS TAEA\t: EA MINUS TAEA\t:\tTATA\t: TA TIMES FATA\t: TA DIVIDE FATA\t: FAFA\t: NIDFA\t: LPAREN EA RPARENEL\t: EL OR TLEL\t: TLTL\t: TL AND FLTL\t: FLFL\t: FL SL PLFL\t: PLPL\t: NIDPL : LPAREN EL RPAREN\n\tSL\t: GT \n\t\t| GTE\n\t\t| LT \n\t\t| LTE \n\t\t| EQ \n\t\t| NEQ\n\t\n\tNID\t: VAA\n\t\t| NUM\n\t\t| NUM DOT NUM\n\tEMPTY :'
    
_lr_action_items = {'VAR':([0,],[3,]),'$end':([1,4,6,8,19,28,],[0,-80,-1,-22,-80,-21,]),'SKP':([2,3,7,20,21,22,24,25,26,27,29,33,34,38,39,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,66,69,80,82,83,84,86,87,88,89,94,96,106,107,108,111,117,119,124,125,127,128,129,130,131,133,134,135,136,139,140,141,142,143,145,146,147,149,151,],[4,5,19,29,-24,-2,31,-15,-16,37,-80,-17,-19,-80,-27,-14,-18,-77,-78,68,-23,69,-25,-28,-29,-30,-31,-32,-33,-34,-35,-20,-26,108,-41,110,-79,-54,-57,-60,-61,119,-45,124,-49,-80,-40,-36,-80,-80,-80,-55,-56,-58,-59,-62,-80,-80,-51,-53,147,-35,-46,-48,-50,-42,-47,-80,-80,-52,]),'MODULE':([4,19,],[9,9,]),'FLOAT':([5,10,11,12,13,14,15,16,23,31,37,68,110,],[17,17,-4,-5,-6,-7,-8,-9,-3,-11,-13,-12,-10,]),'INT':([5,10,11,12,13,14,15,16,23,31,37,68,110,],[18,18,-4,-5,-6,-7,-8,-9,-3,-11,-13,-12,-10,]),'V_END':([5,10,11,12,13,14,15,16,23,31,37,68,110,],[-80,22,-4,-5,-6,-7,-8,-9,-3,-11,-13,-12,-10,]),'ID':([9,17,18,29,32,35,38,39,61,62,63,64,69,70,71,72,78,90,95,97,98,99,100,101,102,103,104,108,109,112,113,114,115,118,119,124,125,133,134,137,147,148,149,],[21,26,26,-80,26,26,26,-27,26,26,81,82,-26,26,26,26,26,26,26,26,26,-71,-72,-73,-74,-75,-76,-80,26,26,26,26,26,26,-80,-80,26,26,26,26,-80,26,26,]),'VASS':([24,25,26,27,33,34,41,42,59,66,81,],[30,-15,-16,36,-17,-19,-14,-18,71,-20,109,]),'COMMA':([24,25,26,27,33,34,41,42,44,45,66,84,144,],[32,-15,-16,32,-17,-19,-14,-18,-77,-78,-20,-79,148,]),'RBRACK':([26,33,34,42,43,44,45,66,84,],[-16,-17,-19,-18,66,-77,-78,-20,-79,]),'GT':([26,33,34,42,44,45,66,75,76,77,84,121,122,123,126,],[-16,-17,-19,-18,-77,-78,-20,99,-68,-69,-79,99,-67,-70,99,]),'GTE':([26,33,34,42,44,45,66,75,76,77,84,121,122,123,126,],[-16,-17,-19,-18,-77,-78,-20,100,-68,-69,-79,100,-67,-70,100,]),'LT':([26,33,34,42,44,45,66,75,76,77,84,121,122,123,126,],[-16,-17,-19,-18,-77,-78,-20,101,-68,-69,-79,101,-67,-70,101,]),'LTE':([26,33,34,42,44,45,66,75,76,77,84,121,122,123,126,],[-16,-17,-19,-18,-77,-78,-20,102,-68,-69,-79,102,-67,-70,102,]),'EQ':([26,33,34,42,44,45,66,75,76,77,84,121,122,123,126,],[-16,-17,-19,-18,-77,-78,-20,103,-68,-69,-79,103,-67,-70,103,]),'NEQ':([26,33,34,42,44,45,66,75,76,77,84,121,122,123,126,],[-16,-17,-19,-18,-77,-78,-20,104,-68,-69,-79,104,-67,-70,104,]),'AND':([26,33,34,42,44,45,66,74,75,76,77,84,120,121,122,123,],[-16,-17,-19,-18,-77,-78,-20,97,-66,-68,-69,-79,97,-65,-67,-70,]),'OR':([26,33,34,42,44,45,66,73,74,75,76,77,79,84,105,120,121,122,123,],[-16,-17,-19,-18,-77,-78,-20,95,-64,-66,-68,-69,95,-79,95,-63,-65,-67,-70,]),'PYC':([26,33,34,42,44,45,66,73,74,75,76,77,79,84,120,121,122,123,150,],[-16,-17,-19,-18,-77,-78,-20,96,-64,-66,-68,-69,107,-79,-63,-65,-67,-70,151,]),'RPAREN':([26,33,34,42,44,45,66,74,75,76,77,84,85,87,88,89,91,92,93,105,116,120,121,122,123,127,128,129,130,131,132,],[-16,-17,-19,-18,-77,-78,-20,-64,-66,-68,-69,-79,111,-57,-60,-61,117,-38,-39,123,131,-63,-65,-67,-70,-55,-56,-58,-59,-62,-37,]),'TIMES':([26,33,34,42,44,45,66,84,87,88,89,127,128,129,130,131,],[-16,-17,-19,-18,-77,-78,-20,-79,114,-60,-61,114,114,-58,-59,-62,]),'DIVIDE':([26,33,34,42,44,45,66,84,87,88,89,127,128,129,130,131,],[-16,-17,-19,-18,-77,-78,-20,-79,115,-60,-61,115,115,-58,-59,-62,]),'PLUS':([26,33,34,42,44,45,66,84,86,87,88,89,91,92,93,116,127,128,129,130,131,132,],[-16,-17,-19,-18,-77,-78,-20,-79,112,-57,-60,-61,118,-38,-39,112,-55,-56,-58,-59,-62,118,]),'MINUS':([26,33,34,42,44,45,66,84,86,87,88,89,116,127,128,129,130,131,],[-16,-17,-19,-18,-77,-78,-20,-79,113,-57,-60,-61,113,-55,-56,-58,-59,-62,]),'LBRACK':([26,33,34,42,66,],[35,35,-19,-18,-20,]),'M_END':([29,38,39,69,],[-80,49,-27,-26,]),'READ':([29,38,39,69,108,119,124,125,133,134,147,149,],[-80,58,-27,-26,-80,-80,-80,58,58,58,-80,58,]),'PRINT':([29,38,39,69,108,119,124,125,133,134,147,149,],[-80,60,-27,-26,-80,-80,-80,60,60,60,-80,60,]),'CON':([29,38,39,69,108,119,124,125,133,134,147,149,],[-80,61,-27,-26,-80,-80,-80,61,61,61,-80,61,]),'LOOP':([29,38,39,69,108,119,124,125,133,134,147,149,],[-80,62,-27,-26,-80,-80,-80,62,62,62,-80,62,]),'FOR':([29,38,39,69,108,119,124,125,133,134,147,149,],[-80,63,-27,-26,-80,-80,-80,63,63,63,-80,63,]),'USE':([29,38,39,69,108,119,124,125,133,134,147,149,],[-80,64,-27,-26,-80,-80,-80,64,64,64,-80,64,]),'NUM':([30,35,36,61,62,65,67,71,78,90,95,97,98,99,100,101,102,103,104,109,112,113,114,115,137,148,],[40,45,46,45,45,83,84,45,45,45,45,45,45,-71,-72,-73,-74,-75,-76,45,45,45,45,45,45,45,]),'F_END':([39,69,108,125,],[-27,-26,-80,136,]),'ELSE':([39,69,119,133,],[-27,-26,-80,141,]),'C_END':([39,69,119,133,138,140,147,149,],[-27,-26,-80,-80,146,-44,-80,-43,]),'L_END':([39,69,124,134,],[-27,-26,-80,143,]),'DOT':([40,45,],[65,67,]),'LPAREN':([58,60,61,62,71,78,90,95,97,98,99,100,101,102,103,104,112,113,114,115,],[70,72,78,78,90,78,90,78,78,78,-71,-72,-73,-74,-75,-76,90,90,90,90,]),'STR':([72,118,],[92,92,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'S':([0,],[1,]),'VA':([0,],[2,]),'M':([4,19,],[6,28,]),'MX':([4,19,],[7,7,]),'EMPTY':([4,5,10,19,29,38,108,119,124,125,133,134,147,149,],[8,16,16,8,39,57,39,39,39,57,140,57,39,57,]),'VX':([5,],[10,]),'VY':([5,10,],[11,23,]),'VFD':([5,10,],[12,12,]),'VFU':([5,10,],[13,13,]),'VID':([5,10,],[14,14,]),'VIU':([5,10,],[15,15,]),'MID':([9,],[20,]),'VAX':([17,18,],[24,27,]),'VAA':([17,18,32,35,38,61,62,70,71,72,78,90,95,97,98,109,112,113,114,115,118,125,133,134,137,148,149,],[25,25,41,44,59,44,44,85,44,93,44,44,44,44,44,44,44,44,44,44,93,59,59,59,44,44,59,]),'DIM':([26,],[33,]),'DIMY':([26,33,],[34,42,]),'A':([29,108,119,124,147,],[38,125,133,134,149,]),'NID':([35,61,62,71,78,90,95,97,98,109,112,113,114,115,137,148,],[43,77,77,89,77,89,77,77,77,126,89,89,89,89,144,150,]),'MY':([38,],[47,]),'AX':([38,125,133,134,149,],[48,48,48,48,48,]),'RD':([38,125,133,134,149,],[50,50,50,50,50,]),'PR':([38,125,133,134,149,],[51,51,51,51,51,]),'CD':([38,125,133,134,149,],[52,52,52,52,52,]),'LP':([38,125,133,134,149,],[53,53,53,53,53,]),'FR':([38,125,133,134,149,],[54,54,54,54,54,]),'AR':([38,125,133,134,149,],[55,55,55,55,55,]),'US':([38,125,133,134,149,],[56,56,56,56,56,]),'EL':([61,62,78,],[73,79,105,]),'TL':([61,62,78,95,],[74,74,74,120,]),'FL':([61,62,78,95,97,],[75,75,75,75,121,]),'PL':([61,62,78,95,97,98,],[76,76,76,76,76,122,]),'FRX':([63,],[80,]),'EA':([71,90,],[86,116,]),'TA':([71,90,112,113,],[87,87,127,128,]),'FA':([71,90,112,113,114,115,],[88,88,88,88,129,130,]),'PX':([72,118,],[91,132,]),'CDX':([73,],[94,]),'SL':([75,121,126,],[98,98,137,]),'LPX':([79,],[106,]),'FRY':([125,],[135,]),'CDE':([133,],[138,]),'CDY':([133,],[139,]),'LPY':([134,],[142,]),'CDZ':([138,],[145,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> S","S'",1,None,None,None),
  ('S -> VA SKP M','S',3,'p_S','LexSin.py',449),
  ('VA -> VAR SKP VX V_END','VA',4,'p_VA','LexSin.py',466),
  ('VX -> VX VY','VX',2,'p_VA','LexSin.py',467),
  ('VX -> VY','VX',1,'p_VA','LexSin.py',468),
  ('VY -> VFD','VY',1,'p_VA','LexSin.py',469),
  ('VY -> VFU','VY',1,'p_VA','LexSin.py',470),
  ('VY -> VID','VY',1,'p_VA','LexSin.py',471),
  ('VY -> VIU','VY',1,'p_VA','LexSin.py',472),
  ('VY -> EMPTY','VY',1,'p_VA','LexSin.py',473),
  ('VFD -> FLOAT VAX VASS NUM DOT NUM SKP','VFD',7,'p_VFD','LexSin.py',477),
  ('VFU -> FLOAT VAX SKP','VFU',3,'p_VFU','LexSin.py',486),
  ('VID -> INT VAX VASS NUM SKP','VID',5,'p_VID','LexSin.py',494),
  ('VIU -> INT VAX SKP','VIU',3,'p_VIU','LexSin.py',503),
  ('VAX -> VAX COMMA VAA','VAX',3,'p_VAX_COMMA','LexSin.py',511),
  ('VAX -> VAA','VAX',1,'p_VAX','LexSin.py',515),
  ('VAA -> ID','VAA',1,'p_VAA_ID','LexSin.py',519),
  ('VAA -> ID DIM','VAA',2,'p_VAA_ID_DIM','LexSin.py',523),
  ('DIM -> DIM DIMY','DIM',2,'p_DIM','LexSin.py',529),
  ('DIM -> DIMY','DIM',1,'p_DIM_DY','LexSin.py',533),
  ('DIMY -> LBRACK NID RBRACK','DIMY',3,'p_DIMY','LexSin.py',537),
  ('M -> MX SKP M','M',3,'p_M','LexSin.py',543),
  ('M -> EMPTY','M',1,'p_M','LexSin.py',544),
  ('MX -> MODULE MID SKP A MY','MX',5,'p_MX','LexSin.py',548),
  ('MID -> ID','MID',1,'p_MID','LexSin.py',551),
  ('MY -> M_END','MY',1,'p_MY','LexSin.py',556),
  ('A -> A AX SKP','A',3,'p_A','LexSin.py',562),
  ('A -> EMPTY','A',1,'p_A','LexSin.py',563),
  ('AX -> RD','AX',1,'p_AX','LexSin.py',568),
  ('AX -> PR','AX',1,'p_AX','LexSin.py',569),
  ('AX -> CD','AX',1,'p_AX','LexSin.py',570),
  ('AX -> LP','AX',1,'p_AX','LexSin.py',571),
  ('AX -> FR','AX',1,'p_AX','LexSin.py',572),
  ('AX -> AR','AX',1,'p_AX','LexSin.py',573),
  ('AX -> US','AX',1,'p_AX','LexSin.py',574),
  ('AX -> EMPTY','AX',1,'p_AX','LexSin.py',575),
  ('PR -> PRINT LPAREN PX RPAREN','PR',4,'p_PR','LexSin.py',580),
  ('PX -> PX PLUS PX','PX',3,'p_PX','LexSin.py',584),
  ('PX -> STR','PX',1,'p_PX_STR','LexSin.py',587),
  ('PX -> VAA','PX',1,'p_PX_ID','LexSin.py',591),
  ('RD -> READ LPAREN VAA RPAREN','RD',4,'p_RD','LexSin.py',600),
  ('US -> USE ID','US',2,'p_US','LexSin.py',609),
  ('CD -> CON EL CDX SKP A CDE CDZ','CD',7,'p_CD','LexSin.py',615),
  ('CDE -> CDY SKP A','CDE',3,'p_CD','LexSin.py',616),
  ('CDE -> EMPTY','CDE',1,'p_CD','LexSin.py',617),
  ('CDX -> PYC','CDX',1,'p_CDX','LexSin.py',621),
  ('CDY -> ELSE','CDY',1,'p_CDY','LexSin.py',627),
  ('CDZ -> C_END','CDZ',1,'p_CDZ','LexSin.py',633),
  ('LP -> LOOP EL LPX SKP A LPY','LP',6,'p_LP','LexSin.py',638),
  ('LPX -> PYC','LPX',1,'p_LPX','LexSin.py',641),
  ('LPY -> L_END','LPY',1,'p_LPY','LexSin.py',647),
  ('FR -> FOR FRX SKP A FRY','FR',5,'p_FR','LexSin.py',654),
  ('FRX -> ID VASS NID SL NID COMMA NID PYC','FRX',8,'p_FRX','LexSin.py',657),
  ('FRY -> F_END','FRY',1,'p_FRY','LexSin.py',673),
  ('AR -> VAA VASS EA','AR',3,'p_AR','LexSin.py',683),
  ('EA -> EA PLUS TA','EA',3,'p_EA_PLUS','LexSin.py',687),
  ('EA -> EA MINUS TA','EA',3,'p_EA_MINUS','LexSin.py',695),
  ('EA -> TA','EA',1,'p_EA_TA','LexSin.py',703),
  ('TA -> TA TIMES FA','TA',3,'p_TA_TIMES','LexSin.py',706),
  ('TA -> TA DIVIDE FA','TA',3,'p_TA_DIVIDE','LexSin.py',714),
  ('TA -> FA','TA',1,'p_TA_FA','LexSin.py',722),
  ('FA -> NID','FA',1,'p_FA','LexSin.py',725),
  ('FA -> LPAREN EA RPAREN','FA',3,'p_FA_PAREN','LexSin.py',729),
  ('EL -> EL OR TL','EL',3,'p_EL_OR','LexSin.py',733),
  ('EL -> TL','EL',1,'p_EL','LexSin.py',741),
  ('TL -> TL AND FL','TL',3,'p_TL_AND','LexSin.py',744),
  ('TL -> FL','TL',1,'p_TL','LexSin.py',752),
  ('FL -> FL SL PL','FL',3,'p_FL_SL','LexSin.py',755),
  ('FL -> PL','FL',1,'p_FL','LexSin.py',763),
  ('PL -> NID','PL',1,'p_PL','LexSin.py',766),
  ('PL -> LPAREN EL RPAREN','PL',3,'p_PL_PAREN','LexSin.py',770),
  ('SL -> GT','SL',1,'p_SL','LexSin.py',775),
  ('SL -> GTE','SL',1,'p_SL','LexSin.py',776),
  ('SL -> LT','SL',1,'p_SL','LexSin.py',777),
  ('SL -> LTE','SL',1,'p_SL','LexSin.py',778),
  ('SL -> EQ','SL',1,'p_SL','LexSin.py',779),
  ('SL -> NEQ','SL',1,'p_SL','LexSin.py',780),
  ('NID -> VAA','NID',1,'p_NID','LexSin.py',786),
  ('NID -> NUM','NID',1,'p_NID','LexSin.py',787),
  ('NID -> NUM DOT NUM','NID',3,'p_NID','LexSin.py',788),
  ('EMPTY -> <empty>','EMPTY',0,'p_EMPTY','LexSin.py',797),
]
