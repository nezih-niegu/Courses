# -*- coding: utf-8 -*-
"""Week1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IoBWL-IheaZogdrp2iGn7twGfK_67it_

#Week 1 Lab: Machine Learning in Python

In this example, we will generate some simulated data, fit logistic regression and random forest models, and evaluate the performance of the models

Examples from: https://scikit-learn.org/stable/documentation.html

Kun-Hsing Yu

March 11, 2023

## Part 1. Simulate a dataset and train a logistic regression model
"""

# import the required packages
from sklearn.linear_model import LogisticRegression
from sklearn.datasets import make_classification

from sklearn.metrics import confusion_matrix

# generate simulated data
n_train = 2000
n_test = 500
n_classes = 2
X, y = make_classification(n_samples=n_train+n_test, n_features=10,
                           n_classes=n_classes,
                           n_informative=2, n_redundant=0,
                           random_state=1, shuffle=True)
X_train = X[0:n_train,:]
y_train = y[0:n_train]
X_test = X[n_train:(n_train+n_test),:]
y_test = y[n_train:(n_train+n_test)]
print(X_train.shape)
print(y_train.shape)
print(X_test.shape)
print(y_test.shape)

# fit the logistic regression model
# note that only the training data X_train and y_train should be used in the training process
clf_lr = LogisticRegression(random_state=0, solver='lbfgs').fit(X_train, y_train)

# get prediction
y_predicted = clf_lr.predict(X_test)

"""## Quiz Question 1
How to get the predicted probability for each sample in the validation set?

Hint: https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LogisticRegression.html#sklearn.linear_model.LogisticRegression.predict_proba

"""

# Your codes here
############################################################
y_predicted_estimates_linear=clf_lr.predict_proba(X_test)
y_predicted_estimates_log=clf_lr.predict_log_proba(X_test)

"""##Quiz Question 2

Generate the confusion matrix.

Hint: https://scikit-learn.org/stable/modules/generated/sklearn.metrics.confusion_matrix.html
"""

from numpy.ma.core import size
# Your codes here
############################################################
confusion_matrix(y_test,y_predicted)

"""##Quiz Question 3

Obtain the betas and intercept.

Hint: https://scikit-learn.org/stable/modules/generated/sklearn.linear_model.LinearRegression.html#sklearn.linear_model.LinearRegression
"""

# Your codes here
############################################################

params=clf_lr.get_params(deep=True)

intercept=clf_lr.intercept_

coef=clf_lr.coef_

"""## Part 2. Train a random forest model"""

# load the package
from sklearn.ensemble import RandomForestClassifier

"""## Quiz Question 4

Define and fit a random forest model.

Hint: https://scikit-learn.org/stable/modules/generated/sklearn.ensemble.RandomForestClassifier.html

"""

# Your codes here
clf_rf = RandomForestClassifier(random_state=0).fit(X_train, y_train)

############################################################

# get prediction
y_predicted = clf_rf.predict(X_test)

# get predicted probability
y_score = clf_rf.predict_proba(X_test)

# generate the confusion matrix (from quiz question 2)
confusion_matrix(y_test,y_predicted)
############################################################

"""## Quiz Question 5
Obtain the feature importance.
"""

# Your codes here
clf_rf.feature_importances_
############################################################

"""## Quiz Question 6

Generate the ROC curve.

Hint: https://scikit-learn.org/stable/auto_examples/model_selection/plot_roc.html
"""

#from sklearn.metrics import roc_curve, auc
import matplotlib.pyplot as plt
from sklearn.metrics import RocCurveDisplay
# Your codes here
ax = plt.gca()
rf_disp = RocCurveDisplay.from_estimator(clf_rf, X_test, y_test, ax=ax, alpha=0.8)
lr_disp = RocCurveDisplay.from_estimator(clf_lr, X_test, y_test, ax=ax, alpha=0.8)
plt.show()
############################################################